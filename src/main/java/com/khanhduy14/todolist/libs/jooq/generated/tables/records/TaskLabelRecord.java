/*
 * This file is generated by jOOQ.
 */
package com.khanhduy14.todolist.libs.jooq.generated.tables.records;


import com.khanhduy14.todolist.libs.jooq.generated.tables.TaskLabel;

import java.time.LocalDateTime;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TaskLabelRecord extends UpdatableRecordImpl<TaskLabelRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.task_label.task_id</code>.
     */
    public void setTaskId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.task_label.task_id</code>.
     */
    public Integer getTaskId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.task_label.label_id</code>.
     */
    public void setLabelId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.task_label.label_id</code>.
     */
    public Integer getLabelId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.task_label.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.task_label.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.task_label.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.task_label.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskLabelRecord
     */
    public TaskLabelRecord() {
        super(TaskLabel.TASK_LABEL);
    }

    /**
     * Create a detached, initialised TaskLabelRecord
     */
    public TaskLabelRecord(Integer taskId, Integer labelId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(TaskLabel.TASK_LABEL);

        setTaskId(taskId);
        setLabelId(labelId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
